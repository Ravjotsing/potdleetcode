class Solution {
public:
    vector<bool> sievehelper(int right){
        vector<bool>x(right+1,true);
        x[0] = false;
        x[1] = false;
        for(int i = 2; i*i <= right; i++) {
            if(x[i] == true) {
                for(int j = 2; i*j <= right; j++) {
                    x[i*j] = false;
                }
            }
        }

        return x;
    }
    vector<int> closestPrimes(int left, int right) {
        vector<bool> isprime = sievehelper(right);
        vector<int>primes;
        for(int num = left;num<=right;num++){
            if(isprime[num] == true){
                primes.push_back(num);
            }
        }
        int mindiff = INT_MAX;
        vector<int> result = {-1, -1};
        for(int i=1;i<primes.size();i++){
            int diff = primes[i] - primes[i-1];
            if(diff<mindiff){
                mindiff = diff;
                result = {primes[i-1],primes[i]};
            }
        }
        return result;
    }
};
