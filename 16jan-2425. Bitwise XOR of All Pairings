B.F 
WILL NOT PASS ALL TEST CASES (38/42)
T.C - O(M*N)
S.C - O(1)
class Solution {
public:
    int xorAllNums(vector<int>& nums1, vector<int>& nums2) {
        int result = 0;
        for(int &num1 : nums1){
            for(int &num2 :nums2){
                result^= (num1^num2);
            }
        }
        return result;
    }
};

B.A (Using frequency count and Xor Property)
//T.C : O(n)
//S.C : O(n)
class Solution {
public:
    int xorAllNums(vector<int>& nums1, vector<int>& nums2) {
        int m = nums1.size();
        int n = nums2.size();

        unordered_map<int, long> mp;

        for(int &num : nums1) {
            mp[num] += n;
        }
        for(int &num : nums2) {
            mp[num] += m;
        }
        int result = 0;
        for(auto &it : mp) {
            int num = it.first;
            int freq = it.second;
            if(freq%2 != 0) { //ODD
                result ^= num;
            }
        }
        return result;
    }
};
O.A  (Using Xor property)
//T.C : O(n)
//S.C : O(1)
class Solution {
public:
    int xorAllNums(vector<int>& nums1, vector<int>& nums2) {
        int m = nums1.size();
        int n = nums2.size();
        int XOR = 0;
        if(m % 2 != 0) {
            for(int &num : nums2) {
                XOR ^= num;
            }
        }
        if(n % 2 != 0) {
            for(int &num : nums1) {
                XOR ^= num;
            }
        }
        return XOR;
    }
};
